{"ast":null,"code":"import _classCallCheck from \"/Users/lica/WebstormProjects/moviereact/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lica/WebstormProjects/moviereact/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lica/WebstormProjects/moviereact/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lica/WebstormProjects/moviereact/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lica/WebstormProjects/moviereact/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport * as React from 'react';\nimport './App.css';\nimport App from \"./MakeCounter\";\n\nvar MakeCounter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MakeCounter, _React$Component);\n\n  function MakeCounter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MakeCounter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MakeCounter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      value: 0\n    };\n\n    _this.increment = function () {\n      _this.setState(function (prevState) {\n        return {\n          value: prevState.value === _this.props.maxValue ? prevState.value : prevState.value + 1\n        };\n      });\n    };\n\n    _this.decrement = function () {\n      _this.setState(function (prevState) {\n        return {\n          value: prevState.value === _this.props.minValue ? prevState.value : prevState.value - 1\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MakeCounter, [{\n    key: \"render\",\n    value: function render() {\n      return this.props.children({\n        value: this.state.value,\n        onIncrement: this.increment,\n        onDecrement: this.decrement\n      });\n    }\n  }]);\n\n  return MakeCounter;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/lica/WebstormProjects/moviereact/src/App.tsx"],"names":["React","App","MakeCounter","state","value","increment","setState","prevState","props","maxValue","decrement","minValue","children","onIncrement","onDecrement","Component"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,eAAhB;;IAkBMC,W;;;;;;;;;;;;;;;;;UACFC,K,GAA0B;AACtBC,MAAAA,KAAK,EAAE;AADe,K;;UAI1BC,S,GAAY,YAAM;AACd,YAAKC,QAAL,CAAc,UAAAC,SAAS;AAAA,eAAK;AACxBH,UAAAA,KAAK,EACDG,SAAS,CAACH,KAAV,KAAoB,MAAKI,KAAL,CAAWC,QAA/B,GACMF,SAAS,CAACH,KADhB,GAEMG,SAAS,CAACH,KAAV,GAAkB;AAJJ,SAAL;AAAA,OAAvB;AAMH,K;;UAEDM,S,GAAY,YAAM;AACd,YAAKJ,QAAL,CAAc,UAAAC,SAAS;AAAA,eAAK;AACxBH,UAAAA,KAAK,EACDG,SAAS,CAACH,KAAV,KAAoB,MAAKI,KAAL,CAAWG,QAA/B,GACMJ,SAAS,CAACH,KADhB,GAEMG,SAAS,CAACH,KAAV,GAAkB;AAJJ,SAAL;AAAA,OAAvB;AAMH,K;;;;;;;6BAEQ;AACL,aAAO,KAAKI,KAAL,CAAWI,QAAX,CAAoB;AACvBR,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KADK;AAEvBS,QAAAA,WAAW,EAAE,KAAKR,SAFK;AAGvBS,QAAAA,WAAW,EAAE,KAAKJ;AAHK,OAApB,CAAP;AAKH;;;;EA7BqBV,KAAK,CAACe,S;;AAgChC,eAAed,GAAf","sourcesContent":["import * as React from 'react'\nimport './App.css';\nimport App from \"./MakeCounter\";\n\ninterface InjectedCounterProps {\n    value: number;\n    onIncrement(): void;\n    onDecrement(): void;\n}\n\ninterface MakeCounterProps {\n    minValue?: number;\n    maxValue?: number;\n    children(props: InjectedCounterProps): JSX.Element;\n}\n\ninterface MakeCounterState {\n    value: number;\n}\n\nclass MakeCounter extends React.Component<MakeCounterProps, MakeCounterState> {\n    state: MakeCounterState = {\n        value: 0,\n    };\n\n    increment = () => {\n        this.setState(prevState => ({\n            value:\n                prevState.value === this.props.maxValue\n                    ? prevState.value\n                    : prevState.value + 1,\n        }));\n    };\n\n    decrement = () => {\n        this.setState(prevState => ({\n            value:\n                prevState.value === this.props.minValue\n                    ? prevState.value\n                    : prevState.value - 1,\n        }));\n    };\n\n    render() {\n        return this.props.children({\n            value: this.state.value,\n            onIncrement: this.increment,\n            onDecrement: this.decrement,\n        });\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}